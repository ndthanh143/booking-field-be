version: '3.8'

services:
  app:
    container_name: my_app
    volumes:
      - .:/app
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '${PORT}:${PORT}'
    restart: unless-stopped
    depends_on:
      - db
      - es
    networks:
      - app-network
  db:
    image: postgres:13.1
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '${DB_PORT}:${DB_PORT}'
    volumes:
      - .docker/data/db:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.2.3
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - node.name=elasticsearch
      - http.port=${ELASTIC_SEARCH_PORT}
      - network.host=0.0.0.0
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    env_file:
      - .env
    volumes:
      - .docker/data/es:/usr/share/elasticsearch/data
    ports:
      - '${ELASTIC_SEARCH_PORT}:${ELASTIC_SEARCH_PORT}'
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
